openapi: 3.1.0
info:
  title: MediaHub API
  version: 0.1.0
paths:
  /healthz:
    get:
      summary: Healthz
      operationId: healthz_healthz_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /auth/login:
    post:
      summary: Auth Login
      operationId: auth_login_auth_login_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /auth/verify:
    get:
      summary: Auth Verify
      operationId: auth_verify_auth_verify_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
      - HTTPBearer: []
  /search:
    get:
      summary: Search
      operationId: search_search_get
      parameters:
      - name: q
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Q
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /tasks/fetch:
    post:
      summary: Tasks Fetch
      operationId: tasks_fetch_tasks_fetch_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchTask'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /admin/config:
    get:
      summary: Get Config
      operationId: get_config_admin_config_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppConfig'
      security:
      - HTTPBearer: []
    put:
      summary: Update Config
      operationId: update_config_admin_config_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppConfig'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppConfig'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /admin/query:
    post:
      summary: Run SQL query
      operationId: admin_query_admin_query_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SQLQuery'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /items/{item_id}:
    get:
      summary: Get Item
      operationId: get_item_items__item_id__get
      parameters:
      - name: item_id
        in: path
        required: true
        schema:
          type: string
          title: Item Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      summary: Delete Item
      operationId: delete_item_items__item_id__delete
      security:
      - HTTPBearer: []
      parameters:
      - name: item_id
        in: path
        required: true
        schema:
          type: string
          title: Item Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /items/{item_id}/favorite:
    post:
      summary: Favorite Item
      operationId: favorite_item_items__item_id__favorite_post
      security:
      - HTTPBearer: []
      parameters:
      - name: item_id
        in: path
        required: true
        schema:
          type: string
          title: Item Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /catalog/{kind}:
    get:
      summary: Catalog List
      operationId: catalog_list_catalog__kind__get
      parameters:
      - name: kind
        in: path
        required: true
        schema:
          type: string
          title: Kind
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /catalog/{kind}/{item_id}:
    get:
      summary: Catalog Detail
      operationId: catalog_detail_catalog__kind___item_id__get
      parameters:
      - name: kind
        in: path
        required: true
        schema:
          type: string
          title: Kind
      - name: item_id
        in: path
        required: true
        schema:
          type: string
          title: Item Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /webhooks/fetcher_done:
    post:
      summary: Fetcher Done
      operationId: fetcher_done_webhooks_fetcher_done_post
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: true
              type: object
              title: Payload
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /jobs/done:
    post:
      summary: Jobs Done
      operationId: jobs_done_jobs_done_post
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: true
              type: object
              title: Payload
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    AppConfig:
      properties:
        download_dir:
          type: string
          title: Download Dir
          default: /downloads
        ffmpeg_preset:
          type: string
          title: Ffmpeg Preset
          default: fast
      type: object
      title: AppConfig
      description: Application configuration stored in the database.
    FetchTask:
      properties:
        infohash:
          anyOf:
          - type: string
          - type: 'null'
          title: Infohash
        uri:
          anyOf:
          - type: string
          - type: 'null'
          title: Uri
      type: object
      title: FetchTask
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    LoginRequest:
      properties:
        username:
          type: string
          title: Username
        password:
          type: string
          title: Password
      type: object
      required:
      - username
      - password
      title: LoginRequest
    LoginResponse:
      properties:
        token:
          type: string
          title: Token
        role:
          type: string
          title: Role
        exp:
          type: string
          format: date-time
          title: Exp
      type: object
      required:
      - token
      - role
      - exp
      title: LoginResponse
    SQLQuery:
      properties:
        sql:
          type: string
          title: Sql
      type: object
      required:
      - sql
      title: SQLQuery
    QueryResult:
      properties:
        rows:
          items:
            type: object
          type: array
          title: Rows
      type: object
      required:
      - rows
      title: QueryResult
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
  securitySchemes:
    HTTPBearer:
      type: http
      scheme: bearer
